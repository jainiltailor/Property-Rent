@model IEnumerable<PropertyRent.Models.Property>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Admin Dashboard - Pending Approvals";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-primary">Pending Properties for Approval</h2>
        <div class="text-end">
            <span class="badge bg-primary px-3 py-2 fs-6">@Model.Count() Pending</span>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info d-flex align-items-center shadow-sm">
            <i class="bi bi-info-circle me-2 fs-5 text-info"></i> No properties are currently pending approval.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm hover-shadow rounded-3 overflow-hidden">
                        <div class="position-relative">
                            @if (!string.IsNullOrEmpty(item.ImagePath))
                            {
                                <img src="@item.ImagePath" class="card-img-top" alt="@item.Title" style="height: 200px; object-fit: cover;">
                            }
                            else
                            {
                                <img src="/images/property-placeholder.jpg" class="card-img-top" alt="Property placeholder" style="height: 200px; object-fit: cover;">
                            }
                            <span class="position-absolute top-0 end-0 badge bg-warning mt-2 me-2 px-3 py-1 rounded-pill shadow-sm">Pending</span>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-primary fw-bold">@item.Title</h5>
                            <p class="card-text text-muted mb-2" title="@item.Description">
                                @(item.Description?.Length > 100 ? item.Description.Substring(0, 97) + "..." : item.Description)
                            </p>
                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span class="fw-bold text-success fs-5">₹@item.PricePerDay/day</span>
                                    <span class="text-muted"><i class="bi bi-geo-alt-fill"></i> @item.Location</span>
                                </div>
                                <div class="d-flex gap-2">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-secondary flex-grow-1">
                                        <i class="bi bi-eye"></i> View Details
                                    </a>
                                    <a asp-action="Approve" asp-route-id="@item.Id" class="btn btn-success flex-grow-1"
                                       onclick="return confirm('Are you sure you want to approve this property?');">
                                        <i class="bi bi-check-circle"></i> Approve
                                    </a>
                                    <a asp-action="Reject" asp-route-id="@item.Id" class="btn btn-danger flex-grow-1"
                                       onclick="return confirm('Are you sure you want to reject this property?');">
                                        <i class="bi bi-x-circle"></i> Reject
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="mt-4">
            <nav aria-label="Admin pagination">
                <ul class="pagination justify-content-center">
                    <!-- Pagination controls would go here -->
                </ul>
            </nav>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.hover-shadow');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.classList.add('shadow-lg');
                    this.style.transform = 'translateY(-5px)';
                    this.style.transition = 'transform 0.3s ease, box-shadow 0.3s ease';
                });

                card.addEventListener('mouseleave', function() {
                    this.classList.remove('shadow-lg');
                    this.style.transform = 'translateY(0)';
                });
            });
        });
    </script>
}